name: Fork - Clone - Build flutter App - Deploy to gh-pages
on:
  push: #initially create the workflow when we first do our git push, otherwise, we will get a 404 NOT FOUND error when we first invoke the workflow API
  workflow_dispatch:
    inputs:
      owner:
        description: "Repository Owner"
        required: true
      repo:
        description: "Repository"
        required: true
      fork-org:
        description: "Fork organization"
        required: true
      run-id:
        description: "Run identifier"
        required: true

jobs:
  webfolder:
    runs-on: ubuntu-latest
    env:
      new-repo-name: ${{ github.event.inputs.owner }}-${{ github.event.inputs.repo }}
    steps:
      - name: ${{ github.event.inputs.run-id }}
        run: |
          echo "run identifier ${{ github.event.inputs.run-id }}"
          echo "new-repo-name ${{ env.new-repo-name }}"

      - name: Fork repository
        uses: actions/github-script@v4
        with:
          github-token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
          script: |
            const owner = '${{ github.event.inputs.owner }}';
            const repo = '${{ github.event.inputs.repo }}';
            const org = '${{ github.event.inputs.fork-org }}';
            const name = '${{ env.new-repo-name }}';

            async function forkRepo() {
              try {
                const response = await github.repos.createFork({
                  owner: owner,
                  repo: repo,
                  organization: org,
                  name: name
                });
                console.log(`Repository ${response.data.full_name} forked to organization ${org}`);
              } catch (error) {
                console.error('Failed to fork repository:', error);
              }
            }

            forkRepo();

      - name: Clone or Checkout repository
        uses: actions/checkout@v2
        with:
          token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
          repository: ${{ github.event.inputs.fork-org }}/${{ env.new-repo-name }}

      - name: Find Flutter project path
        id: flutter-project-project-path
        run: |
          if  [ -f ./pubspec.yaml ]; then
            echo "FLUTTER_PROJECT_PATH=$PWD" >> "$GITHUB_OUTPUT"
          else
            # Find the directory containing the file 'pubspec.yaml'
            PUBSPEC_DIR=$(find . -name "pubspec.yaml" -exec dirname {} \;)

            echo "FLUTTER_PROJECT_PATH=$PUBSPEC_DIR" >> "$GITHUB_OUTPUT"
          fi

      - name: Find supported Flutter version
        id: flutter-version-finder
        uses: ukoreh/actions/flutter-version-finder@4c2d661697862c5c3514b97a69b9f649daa305bb
        with:
          project-path: ${{ steps.flutter-project-project-path.outputs.FLUTTER_PROJECT_PATH }}

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ steps.flutter-version-finder.outputs.flutter-version }}
          channel: ${{ steps.flutter-version-finder.outputs.flutter-channel }}

      - name: Setup Flutter web
        run: |
          channel=${{ steps.flutter-version-finder.outputs.flutter-channel }}

          echo "on channel: $channel"

          if [ "$channel" = "beta" ]; then
            flutter config --enable-web
          fi

      - name: Check if 'web' folder exists
        id: web-folder
        run: |
          cd ${{ steps.flutter-project-project-path.outputs.FLUTTER_PROJECT_PATH }}

          if [ -d "web" ]; then
            echo "'web' folder exists in the same directory as 'pubspec.yaml'."

            echo "WEB_FOLDER_LOCATION=$PWD" >> "$GITHUB_OUTPUT"
          else
            echo "'web' folder does not exist in the same directory as 'pubspec.yaml'. So create it!!!"

            flutter create --platforms web .

            echo "WEB_FOLDER_LOCATION=$PWD" >> "$GITHUB_OUTPUT"
          fi

      - name: Clean flutter
        run: |
          cd ${{ steps.web-folder.outputs.WEB_FOLDER_LOCATION }}
          flutter clean

      - name: Get packages
        run: |
          cd ${{ steps.web-folder.outputs.WEB_FOLDER_LOCATION }}
          flutter pub get

      - name: Build web app
        run: |
          cd ${{ steps.web-folder.outputs.WEB_FOLDER_LOCATION }}

          flutter_version=${{ steps.flutter-version-finder.outputs.flutter-version }}
          base_href="/${{ env.new-repo-name }}/"

          if [[ "$flutter_version" =~ [1|2]\.[0-4]{1,}.+ ]]; then
            flutter build web --release
            
            sed -i "s|<base href=.*>|<!-- empty -> g" build/web/index.html
            sed -i "s|<head>|<head><base href=\"$base_href\">|g" build/web/index.html
          else
            flutter build web --release --base-href $base_href
          fi

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          personal_token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
          publish_dir: ${{ steps.web-folder.outputs.WEB_FOLDER_LOCATION }}/build/web
          external_repository: ${{ github.event.inputs.fork-org }}/${{ env.new-repo-name }}
          publish_branch: gh-pages
